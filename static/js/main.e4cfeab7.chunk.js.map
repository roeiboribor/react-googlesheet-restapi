{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","changeHandler","e","setState","target","name","value","reset","document","querySelectorAll","forEach","input","submitHandler","preventDefault","axios","post","state","then","response","console","log","age","salary","hobby","this","Container","fluid","className","Header","as","Form","id","onSubmit","Field","placeholder","type","onChange","min","Button","color","href","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"oVAKqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAURC,cAAgB,SAACC,GACf,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,SAZzB,EAenBC,MAAQ,WACSC,SAASC,iBAAiB,SAClCC,SAAQ,SAACC,GACdA,EAAML,MAAQ,OAlBC,EAsBnBM,cAAgB,SAACV,GACfA,EAAEW,iBACFC,IACGC,KACC,qEACA,EAAKC,OAENC,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ,EAAKX,YA5BT,EAAKS,MAAQ,CACXX,KAAM,GACNgB,IAAK,GACLC,OAAQ,GACRC,MAAO,IAPQ,E,0CAmCnB,WAAU,IAAD,EAC8BC,KAAKR,MAAlCX,EADD,EACCA,KAAMgB,EADP,EACOA,IAAKC,EADZ,EACYA,OAAQC,EADpB,EACoBA,MAC3B,OACE,eAACE,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,YAA3B,UACE,eAACC,EAAA,EAAD,CAAQD,UAAU,SAASE,GAAG,KAA9B,UACE,sBAAKF,UAAU,gBAAf,UACE,6CACA,0IAIA,mBAAGA,UAAU,OAAb,mBACA,6BACE,wDATN,0BAcA,eAACG,EAAA,EAAD,CAAMC,GAAG,QAAQJ,UAAU,OAAOK,SAAUR,KAAKZ,cAAjD,UACE,eAACkB,EAAA,EAAKG,MAAN,WACE,yCACA,uBACEC,YAAY,kBACZC,KAAK,OACL9B,KAAK,OACLC,MAAOD,EACP+B,SAAUZ,KAAKvB,mBAGnB,eAAC6B,EAAA,EAAKG,MAAN,WACE,wCACA,uBACEC,YAAY,iBACZC,KAAK,SACL9B,KAAK,MACLC,MAAOe,EACPgB,IAAI,IACJD,SAAUZ,KAAKvB,mBAGnB,eAAC6B,EAAA,EAAKG,MAAN,WACE,2CACA,uBACEC,YAAY,oBACZC,KAAK,SACL9B,KAAK,SACLC,MAAOgB,EACPe,IAAI,IACJD,SAAUZ,KAAKvB,mBAGnB,eAAC6B,EAAA,EAAKG,MAAN,WACE,0CACA,uBACEC,YAAY,mBACZC,KAAK,OACL9B,KAAK,QACLC,MAAOiB,EACPa,SAAUZ,KAAKvB,mBAInB,cAACqC,EAAA,EAAD,CAAQC,MAAM,OAAOJ,KAAK,SAA1B,uBAIF,sBAAKR,UAAU,YAAf,UACE,cAACW,EAAA,EAAD,CACElC,OAAO,SACPmC,MAAM,QACNC,KAAK,uGAHP,+BAOA,cAACF,EAAA,EAAD,CAAQlC,OAAO,SAASmC,MAAM,SAASC,KAAK,uBAA5C,iCAGA,cAACF,EAAA,EAAD,CAAQC,MAAM,MAAME,QAASjB,KAAKjB,MAAlC,sBAIF,qBAAKoB,UAAU,OAAf,SACE,mBACEA,UAAU,MACVa,KAAK,4GAFP,4C,GAtHuBE,aCOlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7C,SAAS8C,eAAe,SAM1BX,M","file":"static/js/main.e4cfeab7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Button, Form, Container, Header } from 'semantic-ui-react';\nimport './App.css';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      age: '',\n      salary: '',\n      hobby: '',\n    };\n  }\n  // THIS TRACKS THE CHANGES FROM INPUT FIELDS Like autocomplete\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  reset = () => {\n    const inputs = document.querySelectorAll('input');\n    inputs.forEach((input) => {\n      input.value = '';\n    });\n  };\n\n  submitHandler = (e) => {\n    e.preventDefault();\n    axios\n      .post(\n        'https://sheet.best/api/sheets/0a5ebfe7-5094-4778-a696-b1c7779a73f5',\n        this.state\n      )\n      .then((response) => {\n        console.log(response);\n        this.reset();\n      });\n  };\n\n  render() {\n    const { name, age, salary, hobby } = this.state;\n    return (\n      <Container fluid className=\"container\">\n        <Header className=\"header\" as=\"h2\">\n          <div className=\"note-contaier\">\n            <p>Description:</p>\n            <small>\n              This project is using React Framework with Rest API of Google\n              sheet using Axios to make HTTP request.\n            </small>\n            <p className=\"note\">Note:</p>\n            <ul>\n              <li>npm install axios</li>\n            </ul>\n          </div>\n          React Google Sheets!\n        </Header>\n        <Form id=\"gForm\" className=\"form\" onSubmit={this.submitHandler}>\n          <Form.Field>\n            <label>Name</label>\n            <input\n              placeholder=\"Enter your name\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.changeHandler}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Age</label>\n            <input\n              placeholder=\"Enter your age\"\n              type=\"number\"\n              name=\"age\"\n              value={age}\n              min=\"0\"\n              onChange={this.changeHandler}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Salary</label>\n            <input\n              placeholder=\"Enter your salary\"\n              type=\"number\"\n              name=\"salary\"\n              value={salary}\n              min=\"0\"\n              onChange={this.changeHandler}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Hobby</label>\n            <input\n              placeholder=\"Enter your hobby\"\n              type=\"text\"\n              name=\"hobby\"\n              value={hobby}\n              onChange={this.changeHandler}\n            />\n          </Form.Field>\n\n          <Button color=\"blue\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n        <div className=\"btn-group\">\n          <Button\n            target=\"_blank\"\n            color=\"green\"\n            href=\"https://docs.google.com/spreadsheets/d/1Z0eiHbFhFuUTwDi_Y1Qnnb9nXQVObfWSde2xpPb_fA0/edit?usp=sharing\"\n          >\n            Rest Api - Gsheet\n          </Button>\n          <Button target=\"_blank\" color=\"orange\" href=\" https://sheet.best/\">\n            Connect your Gsheet\n          </Button>\n          <Button color=\"red\" onClick={this.reset}>\n            Clear\n          </Button>\n        </div>\n        <div className=\"link\">\n          <a\n            className=\"btn\"\n            href=\"https://www-freecodecamp-org.cdn.ampproject.org/c/s/www.freecodecamp.org/news/react-and-googlesheets/amp/\"\n          >\n            Freecodecamp - Source\n          </a>\n        </div>\n      </Container>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}